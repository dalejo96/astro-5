---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import BuyButton from "../../components/BuyButton.astro";
import { render } from "astro:content";
import { SHOW_BUY_BUTTON } from "astro:env/server"; 

export const getStaticPaths = (async () => {
    const books = await getCollection('books')
    return books.map((book)=>({params: {id:book.slug}, props:{book}}))
})

const { book } = Astro.props
const { data, slug } = book
const { title, img } = data

const { Content } = await render(book)
---

<Layout title={`${title} - Dev Books`}>
    <div class="flex gap-12">
        <aside class="flex flex-col items-center gap-4">
          <a href='/' class="hover:underline opacity-70">← Volver atrás</a>
          <img transition:name={`img-${slug}`} class="rounded w-72 h-auto" src={`/${img}`} alt={title} />

          {
            SHOW_BUY_BUTTON && <p id="score" />
          }
        </aside>
    
        <main class="max-w-3xl">
          <h1 transition:name={`title-${slug}`} class="text-4xl font-bold mb-4">{title}</h1>
          <div class="prose prose-invert">
            <Content />
          </div>
        </main>
      </div>
</Layout>

<script>
  import { SCORE_API_ENDPOINT } from "astro:env/client";

  const scoreElement = document.querySelector('#score')

  fetch(SCORE_API_ENDPOINT).then(res=>res.text()).then(scoreValue=>{
    if(scoreElement){
      scoreElement.innerHTML = `Puntacion: ${scoreValue.trim()}/5`
    }
  })

</script>